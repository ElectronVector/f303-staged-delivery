name: Build target binary
on: workflow_call
jobs:
  build-target-binary:
    runs-on: ubuntu-latest
    steps:
      # Cache/restore the entire toolchain at GitHub so we don't need to download and extract it on every run.
      - name: Cache toolchain
        id: cache-gcc
        uses: actions/cache@v3
        env:
          cache-name: cache-toolchain
        with:
          path: /home/runner/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi
          key: build-${{ env.cache-name }}
      # If the toolchain isn't cached, we'll need to install it.
      - if: ${{ steps.cache-gcc.outputs.cache-hit != 'true' }}
        name: Install toolchain
        run: | 
          curl -O https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu/12.2.rel1/binrel/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi.tar.xz \
          && tar -xf arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi.tar.xz -C /home/runner
      - name: Set toolchain path
        run: echo "/home/runner/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/bin" >> $GITHUB_PATH
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build application
        run: |
          cmake . -B build/Release --toolchain cmake/arm-none-eabi.cmake -DCMAKE_BUILD_TYPE=Release \
          && cmake --build build/Release
      - name: Save target binary
        uses: actions/upload-artifact@v3
        with:
          name: f303
          path: build/Release/f303